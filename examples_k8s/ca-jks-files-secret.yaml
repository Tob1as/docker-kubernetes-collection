##   ____    _             _ _  ______       ____                     _
##  / ___|  / \           | | |/ / ___|     / ___|  ___  ___ _ __ ___| |_
## | |     / _ \ _____ _  | | ' /\___ \ ____\___ \ / _ \/ __| '__/ _ \ __|
## | |___ / ___ \_____| |_| | . \ ___) |_____|__) |  __/ (__| | |  __/ |_
##  \____/_/   \_\     \___/|_|\_\____/     |____/ \___|\___|_|  \___|\__|
## 

## (1) Example: get cacerts.jks !
## start and join docker container ...
## $ docker run --rm --name java -v $PWD/jks/:/files/:rw -w=/files -it eclipse-temurin:21-jre-alpine ash
## list existing CAs ...
## $ keytool -list -keystore $JAVA_HOME/lib/security/cacerts
## copy ca certs from host path ...
## $ cp /files/*.crt /usr/local/share/ca-certificates/
## copy ca certs from url download (example from: https://certs.secureserver.net/repository) ... 
## $ wget https://ssl-ccp.secureserver.net/repository/sfig2.crt.pem -O /usr/local/share/ca-certificates/starfield.ca.crt
## import ca to cacerts jks (repeat this for every ca) ...
## $ $JAVA_HOME/bin/keytool -importcert -file /usr/local/share/ca-certificates/starfield.ca.crt -alias 'Starfield Intermediate-CA' -noprompt -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit
## copy cacerts to host path ...
## $ cp $JAVA_HOME/lib/security/cacerts /files/cacerts.jks
## 
## if you also need "/etc/ssl/certs/ca-certificates.crt" then ...
## $ update-ca-certificates 

## (2) Example: convert FILE (cacerts.jks) to base64 for secret !
## command to create on Linux Shell ...
## $ cat cacerts.jks | base64 -w0 > ca_jks_base64.txt
## or ...
## $ base64 -w0 ./cacerts.jks > ca_jks_base64.txt
## then copy content of file ca_jks_base64.txt in secret
## info: "-w0" is optional to write file in single line

apiVersion: v1
kind: Secret
metadata:
  name: cacerts-jks
  namespace: default
type: Opaque
data:
  cacerts.jks: <cacerts.jks>
  
