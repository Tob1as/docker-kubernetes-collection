##  _____           _ ____
## |_   _|__   ___ | | __ )  _____  __
##   | |/ _ \ / _ \| |  _ \ / _ \ \/ /
##   | | (_) | (_) | | |_) | (_) >  <
##   |_|\___/ \___/|_|____/ \___/_/\_\
## 

## Toolbox with git, wget, curl, nano, netcat and more.
## https://github.com/Tob1as/docker-tools#toolbox
## https://hub.docker.com/r/tobi312/tools
##
## kubectl -n default exec -it deployment/toolbox -- bash

---

## volume (Recommended: Comment volume out after first run.)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: toolbox-data
  namespace: default
  labels:
    app: toolbox
spec:
  accessModes:
  - ReadWriteOnce  # RWO
  volumeMode: Filesystem
  storageClassName: local-path # change or use: https://github.com/rancher/local-path-provisioner
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: toolbox
  namespace: default
  labels:
    app: toolbox
spec:
  replicas: 1
  strategy:
    type: Recreate # without rwo-volume it can set to "RollingUpdate"
  selector:
    matchLabels:
      app: toolbox
  template:
    metadata:
      labels:
        app: toolbox
    spec:
      #imagePullSecrets:
      #- name: regcred
      #hostname: toolbox
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000    # user/group id for volume mount
        #fsGroupChangePolicy: "OnRootMismatch"
      restartPolicy: Always
      containers:
      - name: toolbox
        #image: tobi312/tools:toolbox          # git, wget, curl, nano, netcat and more
        image: tobi312/tools:toolbox-extended  # additional with Databases and Storages Tools
        imagePullPolicy: Always
        env:
        - name: TZ
          value: "Europe/Berlin"
        #command: [ "/bin/sh", "-c", "--" ]
        #args: [ "while true; do sleep 60; done;" ]
        resources:
          requests:
            memory: "64Mi"
            cpu: "0.1"
          limits:
            memory: "512Mi"
            cpu: "0.5"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: toolbox-data
          mountPath: /data
      volumes:
      - name: toolbox-data
        #emptyDir: {}
        persistentVolumeClaim:
          claimName: toolbox-data
