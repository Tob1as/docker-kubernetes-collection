##  _____                    ____                   _    _____
## |_   _|__  __ _ _ __ ___ / ___| _ __   ___  __ _| | _|___ /
##   | |/ _ \/ _` | '_ ` _ \\___ \| '_ \ / _ \/ _` | |/ / |_ \
##   | |  __/ (_| | | | | | |___) | |_) |  __/ (_| |   < ___) |
##   |_|\___|\__,_|_| |_| |_|____/| .__/ \___|\__,_|_|\_\____/
##                                |_|

## Teamspeak - voice communication (free for 32 users)
## https://www.teamspeak.com/
## https://hub.docker.com/_/teamspeak
## https://github.com/TeamSpeak-Systems/teamspeak-linux-docker-images
## https://support.teamspeak.com/hc/en-us/articles/360002712257-Which-ports-does-the-TeamSpeak-3-server-use-
## Supported architectures: amd64
## Requirements: use sqlite or setup MariaDB before start teamspeak!
## Admin-Token set TS3SERVER_SERVERADMIN_PASSWORD or see in teamspeak logs after start (kubectl -n default logs -f deployment/ts3)
## Exporter: https://github.com/hikhvar/ts3exporter + https://github.com/ricardbejarano/ts3exporter

---

## volume (Recommended: Comment volume out after first run.)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ts3-data
  namespace: default
  labels:
    app: ts3
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: local-path # change or use: https://github.com/rancher/local-path-provisioner
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ts3-env-config
  namespace: default
  labels:
    app: ts3
data:
  TS3SERVER_DB_PLUGIN: "ts3db_sqlite3"         # for MariaDB set to: ts3db_mariadb
  TS3SERVER_DB_SQLCREATEPATH: "create_sqlite"  # for MariaDB set to: create_mariadb
  #TS3SERVER_DB_HOST: "ts3-db"                 # for MariaDB comment in (delete # in front of line)
  #TS3SERVER_DB_PORT: "3306"                   # for MariaDB comment in
  #TS3SERVER_DB_NAME: "teamspeak"              # for MariaDB comment in
  #TS3SERVER_DB_WAITUNTILREADY: "30"           # for MariaDB comment in
  TS3SERVER_LICENSE: "accept"

---

## convert string to base64 in Linux: "echo -n 'value' | base64"

apiVersion: v1
kind: Secret
metadata:
  name: ts3-env-secret
  namespace: default
  labels:
    app: ts3
data:
  #TS3SERVER_DB_USER: dGVhbXNwZWFr              # teamspeak
  #TS3SERVER_DB_PASSWORD: cGFzc3cwcmQ=          # passw0rd
  TS3SERVER_SERVERADMIN_PASSWORD: cGFzc3cwcmQ=  # password, optional: set serverquery serveradmin Password (if unset, it will be generated) 

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts3
  namespace: default
  labels:
    app: ts3
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ts3
  template:
    metadata:
      labels:
        app: ts3
    spec:
      #imagePullSecrets:
      #- name: regcred
      restartPolicy: Always
      containers:
      - name: ts3
        image: teamspeak:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: ts3-env-config
        - secretRef:
            name: ts3-env-secret
        ports:
        - containerPort: 9987
          name: voice
          protocol: UDP
        - containerPort: 10011
          name: query
          protocol: TCP
        - containerPort: 30033
          name: file
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 10011
          failureThreshold: 4
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 10011
          failureThreshold: 4
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.1"
          limits:
            memory: "1Gi"
            cpu: "1.0"
        volumeMounts:
        - mountPath: /var/ts3server
          name: ts3-data
      - name: exporter
        image: ricardbejarano/ts3exporter:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9189
          name: exporter
          protocol: TCP
        env:
        - name: SERVERQUERY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ts3-env-secret
              key: TS3SERVER_SERVERADMIN_PASSWORD
        args:
        - "-enablechannelmetrics=true"
        #- "-ignorefloodlimits=false" # Use this only if your exporter is whitelisted in the query_ip_whitelist.txt file.
        #- "-listen=:9189"
        #- "-passwordfile=/etc/ts3exporter/password" # or use env SERVERQUERY_PASSWORD
        - "-remote=localhost:10011"
        - "-user=serveradmin"
        resources:
          requests:
            memory: "64Mi"
            cpu: "0.1"
          limits:
            memory: "256Mi"
            cpu: "0.5"
      volumes:
      - name: ts3-data
        persistentVolumeClaim:
          claimName: ts3-data

---

# for nginx-ingress port settings, example: https://gist.github.com/superseb/ba6becd1a5e9c74ca17996aa59bcc67e
# and: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
# and: https://github.com/rancher/rancher/issues/14744#issuecomment-1210466472
# or use Traefik or HAProxy
# or set type to NodePort 

apiVersion: v1
kind: Service
metadata:
  name: ts3
  namespace: default
  labels:
    app: ts3
spec:
  type: NodePort    # default: "ClusterIP" , set to "NodePort" for access over external-ip
  ports:
    - name: "voice"
      protocol: UDP
      port: 9987
      targetPort: 9987
      #nodePort: 39987
    - name: "query"
      protocol: TCP
      port: 10011
      targetPort: 10011
      #nodePort: 31011
    - name: "file"
      protocol: TCP
      port: 30033
      targetPort: 30033
      #nodePort: 33033
  selector:
    app: ts3

---

# when service "ts3" is set to ClusterIP you can merge with "ts3-exporter"
apiVersion: v1
kind: Service
metadata:
  name: ts3-exporter
  namespace: default
  labels:
    app: ts3
    exporter: ts3
spec:
  type: ClusterIP    # default: "ClusterIP" , set to "NodePort" for access over external-ip (not recommended)
  ports:
    - name: "exporter"
      protocol: TCP
      port: 9189
      targetPort: 9189
  selector:
    app: ts3

---

## After this line ONLY for Monitoring !

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ts3
  namespace: default
  labels:
    app: ts3
spec:
  endpoints:
  - path: /metrics
    scheme: HTTP
    port: exporter # 9189
    targetPort: 9189
    #metricRelabelings:
  selector:
    matchLabels:
      app: ts3      # service
      exporter: ts3

#---
#
#apiVersion: monitoring.coreos.com/v1
#kind: PrometheusRule
#metadata:
#  name: ts3
#  namespace: default
#  labels:
#    app: ts3
#spec:
#  groups:
#    - name: ts3.rules
#      rules:
