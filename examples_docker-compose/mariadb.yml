# docker-compose -f mariadb.yml up -d
version: '2.4'
services:

  # MariaDB - relational database (SQL), forked from MySQL
  # https://mariadb.org/
  # https://hub.docker.com/_/mariadb
  # https://github.com/MariaDB/mariadb-docker
  # https://github.com/Tob1asDocker/rpi-mariadb/
  # Optional: additional user without admin permission
  # * with init script: https://github.com/docker-library/docs/tree/master/mariadb#initializing-a-fresh-instance
  # * with docker command when container running: docker exec -it mariadb sh -c 'mysql -u root --password=$MARIADB_ROOT_PASSWORD'
  #   CREATE USER IF NOT EXISTS 'user_name'@'%' IDENTIFIED BY 'user_password' WITH MAX_USER_CONNECTIONS 0;
  #   CREATE DATABASE IF NOT EXISTS database_name CHARACTER SET='utf8' COLLATE='utf8_general_ci';
  #   GRANT ALL PRIVILEGES ON database_name.* TO 'user_name'@'%';
  #   FLUSH PRIVILEGES;
  mariadb:
    image: mariadb:10.11                      # Supported architectures: amd64, arm64v8
    # image: tobi312/rpi-mariadb:10.11-alpine # Supported architectures: arm32v7 (RaspberryPi)
    container_name: mariadb
    restart: unless-stopped
    volumes:
      #- ./config_mariadb/10_user.sh:/docker-entrypoint-initdb.d/10_user.sh:ro
      #- ./config_mariadb/20_exporter-user.sh:/docker-entrypoint-initdb.d/20_exporter-user.sh:ro
      - ./data_mariadb:/var/lib/mysql:rw
    environment:
      TZ: Europe/Berlin
      MARIADB_ROOT_PASSWORD: passw0rd
      #MARIADB_DATABASE: db
      #MARIADB_USER: user
      #MARIADB_PASSWORD: passw0rd
    #  EXPORTER_PASSWORD: passw0rd
    #entrypoint:
    #  sh -c "
    #    echo \"SET GLOBAL time_zone = '$$TZ'; SET time_zone = '$$TZ'; SELECT CURRENT_TIME; CREATE USER IF NOT EXISTS 'exporter'@'%' IDENTIFIED BY '$$EXPORTER_PASSWORD' WITH MAX_USER_CONNECTIONS 3; GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'exporter'@'%'; \" > /docker-entrypoint-initdb.d/init.sql;
    #    /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #  "
    ports:
      - 127.0.0.1:3306:3306/tcp
    healthcheck:
      test:  mysqladmin ping -h 127.0.0.1 -u root --password=$$MARIADB_ROOT_PASSWORD || exit 1
      #test:  mysqladmin ping -h 127.0.0.1 -u $$MARIADB_USER --password=$$MARIADB_PASSWORD || exit 1
      interval: 60s
      timeout: 5s
      retries: 5
      #start_period: 30s

  # https://github.com/prometheus/mysqld_exporter
  mariadb-exporter:
    image: prom/mysqld-exporter:latest  # quay.io/prometheus/mysqld-exporter:latest
    container_name: mariadb-exporter
    restart: unless-stopped
    #ports:
    #  - 127.0.0.1:9104:9104/tcp
    command:
      - "--mysqld.username=root:passw0rd"
      #- "--mysqld.username=exporter:Exp0rt3r!"
      - "--mysqld.address=mariadb:3306"
      #- "--web.listen-address=:9104"
      #- "--web.telemetry-path=/metrics"
    depends_on:
      - mariadb

  # As UI Adminer or phpMyAdmin can be used.

  # phpMyAdmin - A web interface for MySQL and MariaDB 
  # https://www.phpmyadmin.net/
  # https://hub.docker.com/_/phpmyadmin + https://github.com/phpmyadmin/docker
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
       PMA_ARBITRARY: 0 # default: 1
       # single server (use when PMA_ARBITRARY=1)
       PMA_HOST: mariadb
       #PMA_VERBOSE: 
       PMA_PORT: 3306
       # multiple server (use when PMA_ARBITRARY=1)
       #PMA_HOSTS: mariadb, mysql, db
       #PMA_VERBOSES: 
       #PMA_PORTS: 3306, 3306, 3306
       # user credentials (Do NOT use in public internet!)
       #PMA_USER: root
       #PMA_PASSWORD: passw0rd
       # more settings
       PMA_ABSOLUTE_URI: https://phpmyadmin.example.com
       #MAX_EXECUTION_TIME: 600
       #MEMORY_LIMIT: 512M
       #UPLOAD_LIMIT: 2048K
       #HIDE_PHP_VERSION: true # default: false
       #APACHE_PORT: 80
    ports:
      - 127.0.0.1:8080:80/tcp
    healthcheck:
      test: ["CMD", "curl", "-Ss", "http://127.0.0.1:80/robots.txt"]
      #start_period: 5s
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - mariadb
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      #- "traefik.docker.network=mynetwork"
      # Tell Traefik to use the http port 80 to connect to phpmyadmin container
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.scheme=http"  # when "https" then set "--serversTransport.insecureSkipVerify=true" for traefik
      # http
      - "traefik.http.routers.phpmyadmin-http.rule=Host(`phpmyadmin.example.com`)"
      - "traefik.http.routers.phpmyadmin-http.entrypoints=web"
      - "traefik.http.routers.phpmyadmin-http.service=phpmyadmin"
      # https
      - "traefik.http.routers.phpmyadmin-https.tls=true"
      - "traefik.http.routers.phpmyadmin-https.rule=Host(`phpmyadmin.example.com`)"
      - "traefik.http.routers.phpmyadmin-https.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin-https.service=phpmyadmin"
      # load middlewares for routes
      - "traefik.http.routers.phpmyadmin-http.middlewares=phpmyadmin-https"
      # http to https redirect      
      - "traefik.http.middlewares.phpmyadmin-https.redirectscheme.scheme=https"
      #- "traefik.http.middlewares.phpmyadmin-https.redirectscheme.permanent=true"
      #- "traefik.http.middlewares.phpmyadmin-https.redirectscheme.port=443"

networks:
  default:
    external: true
    name: mynetwork
