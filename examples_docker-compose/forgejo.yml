# docker-compose -f forgejo.yml -p forgejo up -d
version: '2.4'
services:

  # Git-Server: Forgejo or Gitea
  # difference between Forgejo and Gitea: https://forgejo.org/compare/ and https://forgejo.org/compare-to-gitea/
  # Forgejo: https://forgejo.org/
  # * https://codeberg.org/forgejo/forgejo
  # * https://forgejo.org/docs/latest/admin/installation-docker/
  # * https://forgejo.org/docs/latest/admin/config-cheat-sheet/
  # * Backup: "docker exec -u git -w /data/backups -it forgejo forgejo dump --type tar.gz"
  # Gitea?, see: https://github.com/Tob1as/docker-kubernetes-collection/blob/master/examples_docker-compose/gitea.yml
  # Supported architectures: amd64, arm64
  forgejo:
    image: codeberg.org/forgejo/forgejo:10.0.0
    container_name: forgejo
    restart: unless-stopped
    environment:
      - USER_UID=1000
      - USER_GID=1000
      # forgejo
      #- FORGEJO__APP_NAME=Git
      #- FORGEJO__APP_SLOGAN=
      - FORGEJO__DEFAULT__APP_NAME=Git
      - FORGEJO__DEFAULT__APP_SLOGAN=
      - FORGEJO__time__DEFAULT_UI_LOCATION=Europe/Berlin
      - FORGEJO__server__DOMAIN=git.example.com
      - FORGEJO__server__ROOT_URL=https://git.example.com
      - FORGEJO__server__HTTP_PORT=3000
      - FORGEJO__server__DISABLE_SSH=true
      - FORGEJO__server__SSH_DOMAIN=git.example.com
      - FORGEJO__server__SSH_PORT=2222
      - FORGEJO__server__SSH_LISTEN_PORT=22
      - FORGEJO__server__DISABLE_REGISTRATION=false
      - FORGEJO__database__DB_TYPE=mysql  # sqlite3, mysql, postgres, mssql
      - FORGEJO__database__HOST=forgejo-db:3306
      - FORGEJO__database__NAME=git
      - FORGEJO__database__USER=git
      - FORGEJO__database__PASSWD=passw0rd
      - FORGEJO__cache__ENABLED=true
      - FORGEJO__cache__ADAPTER=redis  # memory, redis, redis-cluster, twoqueue or memcache
      - FORGEJO__cache__HOST=redis://:passw0rd@forgejo-cache:6379/0?pool_size=100&idle_timeout=180s
      - FORGEJO__cache__ITEM_TTL=24h
      - FORGEJO__mailer__ENABLED=true
      - FORGEJO__mailer__PROTOCOL=smtp+starttls # "smtp", "smtps", "smtp+starttls", "smtp+unix", "sendmail", "dummy"
      - FORGEJO__mailer__SMTP_ADDR=mail.example.com
      - FORGEJO__mailer__SMTP_PORT=587
      - FORGEJO__mailer__USER=git@example.com
      - FORGEJO__mailer__PASSWD=passw0rd
      - FORGEJO__mailer__FROM=Git <git@example.com>
      - FORGEJO__service__REGISTER_EMAIL_CONFIRM=true
      - FORGEJO__service__ENABLE_NOTIFY_MAIL=true
      - FORGEJO__service__DEFAULT_KEEP_EMAIL_PRIVATE=true
      - FORGEJO__service__DISABLE_REGISTRATION=false
      - FORGEJO__admin__SEND_NOTIFICATION_EMAIL_ON_NEW_USER=true
      - FORGEJO__openid__ENABLE_OPENID_SIGNIN=false
      - FORGEJO__metrics__ENABLED=true
      - FORGEJO__metrics__ENABLED_ISSUE_BY_LABEL=true
      - FORGEJO__metrics__ENABLED_ISSUE_BY_REPOSITORY=true
      - FORGEJO__metrics__TOKEN=passw0rd  # curl https://git.example.com/metrics -H "Authorization: Bearer <TOKEN>"
      - FORGEJO__log__LEVEL=Info # Trace, Debug, Info, Warn, Error, Critical, Fatal, None
    volumes:
      - ./data_forgejo:/data:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    #ports:
    #  #- "3000:3000"
    #  - "2222:22"
    networks:
      - forgejo-net
      - traefik
    depends_on:
      forgejo-db:
        condition: service_healthy # service_healthy or service_started
      forgejo-cache:
        condition: service_healthy # service_healthy or service_started
    healthcheck:
      test:  wget --quiet --tries=1 --spider --no-check-certificate http://127.0.0.1:3000/api/healthz || exit 1
      #start_period: 30s
      interval: 15s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.forgejo.loadbalancer.server.port=3000"
      - "traefik.http.services.forgejo.loadbalancer.server.scheme=http"  # when "https" then set "--serversTransport.insecureSkipVerify=true" for traefik
      # http
      - "traefik.http.routers.forgejo-http.rule=Host(`git.example.com`) && PathPrefix(`/`)"
      - "traefik.http.routers.forgejo-http.entrypoints=web"
      - "traefik.http.routers.forgejo-http.service=forgejo"
      # https
      - "traefik.http.routers.forgejo-https.tls=true"
      - "traefik.http.routers.forgejo-https.rule=Host(`git.example.com`) && PathPrefix(`/`)"
      - "traefik.http.routers.forgejo-https.entrypoints=websecure"
      - "traefik.http.routers.forgejo-https.service=forgejo"
      # load middlewares for routers
      - "traefik.http.routers.forgejo-http.middlewares=forgejo-https"
      # http to https redirect
      - "traefik.http.middlewares.forgejo-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.forgejo-https.redirectscheme.permanent=true"
      - "traefik.http.middlewares.forgejo-https.redirectscheme.port=443"

  # https://github.com/Tob1as/docker-kubernetes-collection/blob/master/examples_docker-compose/mariadb.yml    
  forgejo-db:
    image: docker.io/library/mariadb:10.11
    container_name: forgejo-db
    restart: unless-stopped
    volumes:
      - ./data_forgejo-db:/var/lib/mysql:rw
    environment:
      TZ: Europe/Berlin
      MARIADB_ROOT_PASSWORD: passw0rd
      MARIADB_DATABASE: git
      MARIADB_USER: git
      MARIADB_PASSWORD: passw0rd
      #MARIADB_AUTO_UPGRADE: 1
    #ports:
    #  - 127.0.0.1:3306:3306/tcp
    healthcheck:
      #test:  mysqladmin ping -h 127.0.0.1 -u root --password=$$MARIADB_ROOT_PASSWORD || exit 1
      test:  mysqladmin ping -h 127.0.0.1 -u $$MARIADB_USER --password=$$MARIADB_PASSWORD || exit 1
      #start_period: 30s
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - forgejo-net
       
  # https://github.com/Tob1as/docker-kubernetes-collection/blob/master/examples_docker-compose/redis.yml       
  forgejo-cache:
    image: docker.io/library/redis:alpine
    container_name: forgejo-cache
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
      REDIS_PASSWORD: passw0rd
    #ports:
    #  - 127.0.0.1:6379:6379/tcp
    command: ["sh", "-c", "exec redis-server --loglevel warning --requirepass $${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD","sh","-c","exec redis-cli --no-auth-warning -a $${REDIS_PASSWORD} ping"]
      #start_period: 30s
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - forgejo-net



  # Forgejo Runner
  # Docs: 
  # * https://forgejo.org/docs/next/admin/actions/
  # * https://forgejo.org/docs/next/admin/runner-installation/
  # * self-sign cert: https://forum.gitea.com/t/cannot-checkout-a-repository-hosted-on-a-gitea-instance-using-self-signed-certificate-server-certificate-verification-failed/7903/3
  # Examples: 
  # * docker-compose: https://code.forgejo.org/forgejo/runner/src/branch/main/examples/docker-compose/compose-forgejo-and-runner.yml
  # * Action Workflow: https://github.com/Tob1as/docker-build-example/blob/main/.github/workflows/build_docker_images.yaml
  # Run first: 
  # * mdkir ./data_forgejo-runner
  # * docker run --entrypoint='' --rm --name forgejo-runner-config -it code.forgejo.org/forgejo/runner:6 forgejo-runner generate-config > ./data_forgejo-runner/config.yml
  # * and edit or use my example: ./data_forgejo-runner/config.yml
  # * docker run --rm --name forgejo-runner-config -it code.forgejo.org/forgejo/runner:6 forgejo-runner create-runner-file --name forgejo-runner-0 --instance https://git.example.conf --secret <RUNNER-SECRET> --connect
  forgejo-runner:
    image: 'code.forgejo.org/forgejo/runner:6'
    depends_on:
      forgejo-did:
        condition: service_started  # or service_healthy
      forgejo:
        condition: service_healthy # or service_started
    container_name: 'forgejo-runner'
    #hostname: forgejo-runner
    environment:
      DOCKER_HOST: 'tcp://forgejo-did:2376'
    #user: 1000:1000
    volumes:
      - ./data_forgejo-runner:/data:rw                                              # after register runner you find here .runner and .cache files
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro    # when need other certs (e.g.: self-signed certificate)
    restart: 'unless-stopped'
    #command: '/bin/sh -c "while : ; do sleep 1 ; done ;"'
    command: /bin/sh -c "while ! nc -z forgejo-did 2376 </dev/null; do echo 'waiting for docker daemon...'; sleep 5; done; forgejo-runner --config config.yml daemon"
    networks:
      - forgejo-runner-net

  forgejo-did:
    image: docker:dind
    container_name: 'forgejo-did'
    #hostname: forgejo-did
    privileged: 'true'
    command: ['dockerd', '-H', 'tcp://0.0.0.0:2376', '--tls=false']
    environment:
      DOCKER_HOST: 'tcp://localhost:2376'
    restart: 'unless-stopped'
    volumes:
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
    networks:
      - forgejo-runner-net
    healthcheck:
      test: ["CMD-SHELL", "nc -nzv -w 3 127.0.0.1 2376 || exit 1"]
      #start_period: 30s
      interval: 15s
      timeout: 5s
      retries: 3



networks:
  forgejo-net:
    name: forgejo-net
  forgejo-runner-net:
    name: forgejo-runner-net
  traefik:
    external: true
    name: mynetwork