# use docker embedded DNS server to resolve myapp host name
#resolver 127.0.0.11;

#upstream apache2 {
#    server apache:80;
#}

#upstream lets_encrypt {
#    server letsencrypt:80;
#}

server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    #error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}
    
    client_max_body_size 0;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    #############################################################################
    # Activate one of the following configuration blocks for server port 80 !
    # Activate the same blocks under server 443 too. Exception redirect block.
    #############################################################################
    
    # use only html
    
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
    }
    
    #############################################################################
    
    # use this for php-fpm without apache2
    
    #root /usr/share/nginx/html;
    #
    #location / {
    #    #root /usr/share/nginx/html;
    #    index index.html index.htm index.php;
    #}
    #
    #location ~ \.php$ {
    #    #root /usr/share/nginx/html;
    #    fastcgi_pass phpfpm:9000;
    #    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #    fastcgi_index index.php;
    #    fastcgi_param REMOTE_ADDR $http_x_real_ip;
    #    fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
    #    include fastcgi_params;
    #    if (!-f $document_root$fastcgi_script_name) {
    #    	return 404;
    #    }
    #}
    
    #############################################################################
    
    # use this for apache2 (with php)
    
    #location / {
    #    proxy_set_header Host $http_host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-Proto https;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Ssl on;
    #    #proxy_redirect http:// https://;
    #    proxy_redirect off;
    #    add_header Pragma "no-cache";
    #    proxy_pass http://apache:80;
    #}
    
    #############################################################################
    
    # use this for redirect to https (443)
    
    #location ~ /\.well-known/ {
    #    proxy_pass http://letsencrypt:80;
    #    proxy_set_header Host $http_host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto https;
    #}
    
    #location / {
    #    return 301 https://$server_name$request_uri;
    #}
    
    #############################################################################
    
}

#server {
#    listen 443 default ssl http2;
#    listen [::]:443 default ssl http2;
#    server_name _;
#    
#    ssl_certificate /etc/ssl/ssl.crt;
#    ssl_certificate_key /etc/ssl/ssl.key;
#    #ssl_certificate /etc/letsencrypt/live/__YOUR-DOMAIN__/fullchain.pem;
#    #ssl_certificate_key /etc/letsencrypt/live/__YOUR-DOMAIN__/privkey.pem;
#    # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html 
#    ssl_prefer_server_ciphers on;
#    ssl_session_cache shared:SSL:10m;
#    ssl_session_timeout 10m;
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384";
#    # openssl dhparam -out dhparam.pem 4096
#    #ssl_dhparam /etc/nginx/ssl/dhparam.pem; 
#    
#    #error_page 497 https://$host:$server_port$request_uri;
#    
#    #error_page  404              /404.html;
#    # redirect server error pages to the static page /50x.html
#    #
#    #error_page   500 502 503 504  /50x.html;
#    #location = /50x.html {
#    #    root   /usr/share/nginx/html;
#    #}
#    
#    client_max_body_size 0;
#    
#    location /nginx_status {
#        stub_status on;
#        access_log off;
#        allow 127.0.0.1;
#        allow ::1;
#        allow 10.0.0.0/8;
#        allow 172.16.0.0/12;
#        allow 192.168.0.0/16;
#        deny all;
#    }
#    
#    # redirect to http for ssl cert generation
#    #location ~ /\.well-known/ {
#    #    return 301 http://$server_name$request_uri;
#    #    #proxy_pass https://letsencrypt:443;
#    #    #proxy_set_header Host            $host;
#    #    #proxy_set_header X-Forwarded-For $remote_addr;
#    #    #proxy_set_header X-Forwarded-Proto https;
#    #}
#    
#    #############################################################################
#    # Activate one of the following configuration blocks for server port 443 !
#    #############################################################################
#    
#    # use only html
#    
#    location / {
#        root /usr/share/nginx/html;
#        index index.html index.htm;
#    }
#    
#    #############################################################################
#    
#    # use this for php-fpm without apache2
#    
#    #root /usr/share/nginx/html;
#    #
#    #location / {
#    #    #root /usr/share/nginx/html;
#    #    index index.html index.htm index.php;
#    #}
#    #
#    #location ~ \.php$ {
#    #    #root /usr/share/nginx/html;
#    #    fastcgi_pass phpfpm:9000;
#    #    fastcgi_split_path_info ^(.+\.php)(/.+)$;
#    #    fastcgi_index index.php;
#    #    fastcgi_param REMOTE_ADDR $http_x_real_ip;
#    #    fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
#    #    include fastcgi_params;
#    #    if (!-f $document_root$fastcgi_script_name) {
#    #        return 404;
#    #    }
#    #}
#    
#    #############################################################################
#    
#    # use this for apache2 (with php)
#    
#    #location / {
#    #    proxy_set_header Host $http_host;
#    #    proxy_set_header X-Real-IP $remote_addr;
#    #    proxy_set_header X-Forwarded-Proto https;
#    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    #    proxy_set_header X-Forwarded-Ssl on;
#    #    #proxy_redirect http:// https://;
#    #    proxy_redirect off;
#    #    add_header Pragma "no-cache";
#    #    proxy_pass http://apache:80;
#    #}
#    
#    #############################################################################
#    
#}
