; url MQTT broker in format scheme://address:port
;   scheme can be one of:
;     tcp - unencrypted MQTT connection
;     ssl - SSL encrypted MQTT connection (requires ca_cert)
;     ws  - web socket MQTT connection
;
; user     - user name for authentication (user/password authentication)
; password - password for authentication (user/password authentication)
; cert     - SSL client certificate for authentication
; key      - SSL client private key for authentication
;
; client_id - MQTT client ID to use for connection. If not set a random UUID will be created
; ca_cert  - path to CA certificate
; topic    - MQTT topic
;   - source broker      - MQTT topic to listen for messages (MQTT wildcards - + and/or # - are allowed)
;   - destination broker - MQTT topic to forward messages to. MQTT wildcards are NOT allowed. Can be empty
;                          to allow direct mapping without topic change. Otherwise the source topic of a
;                          MQTT message will be appended to the destination topic.
; insecure_ssl - don't validate server certificate
; qos - MQTT QoS (0, 1 or 2), default: 0
; timeout - MQTT connection timeout in seconds, 0 disables the timeout. Default: 30
;
; Note:
;   user/password authentication and SSL client certificate/key authentication are mutually exclusive
;

; Section [source] defines the source MQTT broker, [destination] the destination broker
[source]
url = ssl://mosquitto.example.com:8883
user = admin
password = passw0rd
ca_cert = /etc/ssl/certs/ca-certificates.crt
insecure_ssl = false
topic = '#'
qos = 0
timeout = 30
client_id = mqtt-forwarder

[destination]
url = tcp://vernemq:1883
user = admin
password = passw0rd
ca_cert = /etc/ssl/certs/ca-certificates.crt
insecure_ssl = false
#topic = copy
qos = 0
timeout = 30
client_id = mqtt-forwarder
