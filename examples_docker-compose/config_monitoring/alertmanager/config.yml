global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'example.org:587'
  smtp_from: 'AlertManager <monitoring@example.org>'
  smtp_auth_username: 'monitoring@example.org'
  smtp_auth_password: ''
  #smtp_require_tls: true

# The directory from which notification templates are read.
#templates:
#- '/etc/alertmanager/template/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: 'monitoring-team'

  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  #
  # To aggregate by all possible labels use '...' as the sole label name.
  # This effectively disables aggregation entirely, passing through all
  # alerts as-is. This is unlikely to be what you want, unless you have
  # a very low alert volume or your upstream notification system performs
  # its own grouping. Example: group_by: [...]
  group_by: ['alertname', 'cluster']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 6h

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.

receivers:
- name: 'monitoring-team'
  email_configs:
  - to: 'user1@example.org, user2@example.org'
    #html: '{{ template "email.custom.html" . }}'
    send_resolved: true
